#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include "../zmk-helpers/helper.h"

//
// HOLD TAPs (&mt)
//
// ZMK_BEHAVIOR(some_mt, hold_tap,
//     bindings = <&kp>, <&kp>;
//     MT_CORE
// )

//
// Caps Word
// tap: sticky-shift | shift + tap/ double-tap: caps-word | hold: shift
ZMK_BEHAVIOR(smart_shft, mod_morph,
    bindings = <&sk LSHFT>, <&caps_word>;
    mods = <(MOD_LSFT)>;
)
SPACEROCK_MOD_SHIFT(smart_shift, &sk LSHFT, &caps_word)
&caps_word {  // mods deactivate caps-word, requires PR #1451
    /delete-property/ ignore-modifiers;
};

//
// Num Word
//
ZMK_BEHAVIOR(num_dance, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&num_word>, <&sl NAV>;  // reverse this for sticky-num on single tap
)
ZMK_BEHAVIOR(smart_num, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&mo>, <&num_dance>;
)
// tap: num-word | double-tap: sticky num-layer | hold: num-layer
#define SMART_NUM &smart_num NAV 0

#define NUM_PERENS \
    KP_LEFT_PARENTHESIS KP_LPAR KP_RIGHT_PARENTHESIS KP_RPAR \
    LEFT_PARENTHESIS LPAR RIGHT_PARENTHESIS RPAR
#define NUM_EMDAS \
    KP_MULTIPLY KP_ASTERISK ASTERISK ASTRK STAR \
    KP_DIVIDE KP_SLASH SLASH FSLH \
    KP_PLUS PLUS \
    KP_MINUS KP_SUBTRACT MINUS
#define NUM_OPERATORS KP_DOT DOT KP_COMMA COMMA KP_EQUAL KP_EQUAL_AS400 EQUAL BSPC DEL UNDER
&num_word {  // num-word, requires PR #1451
    layers = <NAV>;
    continue-list = <NUM_PERENS NUM_EMDAS NUM_OPERATORS>;
};

//
// Nav Word
//
// ZMK_BEHAVIOR(nav_dance, tap_dance,
//     tapping-term-ms = <200>;
//     bindings = <&nav_word>, <&sl NAV>;  // reverse this for sticky-num on single tap
// )
// ZMK_BEHAVIOR(smart_num, hold_tap,
//     flavor = "balanced";
//     tapping-term-ms = <200>;
//     quick-tap-ms = <QUICK_TAP_MS>;
//     bindings = <&mo>, <&nav_dance>;
// )
// // tap: num-word | double-tap: sticky num-layer | hold: num-layer
// #define SMART_NAV &smart_num NAV 0

// #define NAVS_LAYOUTS _______________________NAVS_TOP_______________________ _______________________NAVS_MID_______________________
// #define NAVS HOME END
// #define NAVS_MODS LSHFT RSHFT LCTRL RCTRL LALT RALT LGUI RGUI
// &nav_word {  // num-word, requires PR #1451
//     layers = <NAV>;
//     continue-list = <NAVS_LAYOUTS NAVS NAVS_MODS>;
// };

// swapper
// https://github.com/dhruvinsh/zmk-tri-state
ZMK_BEHAVIOR(swapper, tri-state,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
    ignored-key-positions = <1>;
)
