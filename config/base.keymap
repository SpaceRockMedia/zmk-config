 /* source keypos definitions */
// #include "../zmk-nodefree-config/keypos_def/keypos_60keys.h"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// #include "../zmk-nodefree-config/helper.h"

#define DEF 0
// #define NAV 1
// #define FUN 2
// #define SYM 2
// #define DIG 3
// #define CNF 2

// #include "combos.dtsi"  // requires layer aliases

#define ___ &trans
#define XXX &none

/* Global settings */

// #define QUICK_TAP_MS 175

// &sk {  // sticky-key config
    // release-after-ms = <600>;  // release after 0.6s
    // quick-release;             // no double capitalization when rolling keys
// };
//
// &sl {  // sticky-layer config
    // ignore-modifiers;          // allow chording sticky mods & layers
// };
//
// &lt {  // layer-tap config
    // flavor = "balanced";
    // tapping-term-ms = <200>;
    // quick-tap-ms = <QUICK_TAP_MS>;
// };
//
// /* Nav cluster */
//
// long-tap action on hold, short-tap action on all interrupts
// #define MT_CORE \
    // flavor = "tap-preferred"; \
    // tapping-term-ms = <220>; \
    // quick-tap-ms = <220>; \
    // hold-trigger-key-positions = <0>;
//
// &mt { MT_CORE };
// #define NAV_BSPC  &mt LC(BSPC) BSPC    // tap: bspc  | long-tap: delete word backward
// #define NAV_DEL   &mt LC(DEL)  DEL     // tap: del   | long-tap: delete word forward

/* Braces */

// tap: right-shift | left-shift + tap: ]
// ZMK_BEHAVIOR(bclose, mod_morph,
//     bindings = <&kp RPAR>, <&kp RBKT>;
//     mods = <(MOD_LSFT)>;
// )

// // tap: left-shift | right-shift + tap: [
// ZMK_BEHAVIOR(bopen, mod_morph,
//     bindings = <&kp LPAR>, <&kp LBKT>;
//     mods = <(MOD_RSFT)>;
// )
